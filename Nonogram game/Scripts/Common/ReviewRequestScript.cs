using System;
using System.Collections;
using System.Collections.Generic;
using Peak.QuixelLogic.Scripts.Game;
using Peak.QuixelLogic.Scripts.ScenesLogic;
using UnityEngine;
#if UNITY_IOS
using UnityEngine.iOS;
#endif
namespace Peak.QuixelLogic.Scripts.Common
{
    public class ReviewRequestScript : MonoBehaviour
    {
        public void TryRequestReview(Player player, bool fullStarScore)
        {
            if (player.ShouldShowReviewPopup && !player.NewLocation)
            {
                StartCoroutine(RequestReview());
                player.ShouldShowReviewPopup = false;
            }
            else
            {
                if (player.MainPuzzleIndex.Equals(Constants.ReviewPopupLevelMilestones.levelMilestoneOne) ||
                    player.MainPuzzleIndex.Equals(Constants.ReviewPopupLevelMilestones.levelMilestoneTwo) ||
                    player.MainPuzzleIndex.Equals(Constants.ReviewPopupLevelMilestones.levelMilestoneThree))
                {
                    player.ShouldShowReviewPopup = true;

                    if (fullStarScore && !player.NewLocation)
                    {
                        StartCoroutine(RequestReview());
                        player.ShouldShowReviewPopup = false;
                    }
                    else return;
                }
            }
        }

        public IEnumerator RequestReview()
        {
            yield return new WaitUntil(() => SceneActivationBehaviour<CollectionScreenActivator>.Instance.RootCamera.isActiveAndEnabled);
#if UNITY_IOS
            Device.RequestStoreReview();
#elif UNITY_ANDROID
            //Application.OpenURL("market://details?id=" + Application.productName);
            InterfaceController.Instance.Show(Autogenerated.GameWindow.PopUpAndroidReview);
#endif
            yield break;
        }
    }
}