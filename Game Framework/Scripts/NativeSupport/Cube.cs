using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UnityEngine;
using Peak.UnityGameFramework.Scripts.ScenesLogic;
using Peak.UnityGameFramework.Scripts.Autogenerated;
using System.Runtime.Remoting.Activation;

#if UNITY_IOS
public class NativeAPI
{
    [DllImport("__Internal")]
    public static extern void frameworkLoaded();

    [DllImport("__Internal")]
    public static extern int startNewRound();

    [DllImport("__Internal")]
    public static extern void finishRound(bool success, int score, string customData);

    [DllImport("__Internal")]
    public static extern void pausePressed();

    [DllImport("__Internal")]
    public static extern void helpPressed();
}
#endif

public class Cube : MonoBehaviour
{
    private string CurrentGameID = "WPA";

    private void Start()
    {
        print($"[CUBE] - START - {Time.time}");
    }

    public void FrameworkLoaded()
    {
        print($"[CUBE] - FrameworkLoaded - {Time.time}");
#if UNITY_IOS // && !UNITY_EDITOR
    NativeAPI.frameworkLoaded();
#elif UNITY_ANDROID //&& !UNITY_EDITOR
        AndroidJavaObject overrideActivity = GetOverrideObject(); //new AndroidJavaClass("com.company.product.OverrideUnityActivity");
        if (overrideActivity != null)
        {
            print("override is real! - FrameworkLoaded");
            overrideActivity.Call("frameworkLoaded");
            //difficulty = overrideActivity.Call<int>("startNewRound");
        }
#endif
    }

    void Update()
    {
        if (Application.platform == RuntimePlatform.Android)
        {
            if (Input.GetKeyDown(KeyCode.Escape)) Application.Quit();
        }
    }

    public void LoadGame(string gameID)
    {
        CurrentGameID = gameID;
        print($"[CUBE] Load Game: {gameID} ({CurrentGameID})");
        InterfaceController.Instance.StartGame(WindowForId());
    }

    private GameWindow WindowForId()
    {
        switch (CurrentGameID)
        {
            case "WPA":
                return GameWindow.WPAGame;
            default:
                return GameWindow.SPEGame;
        }
    }

    private int forcedDiff = 0;

    public void StartRoundWithDifficulty(int difficulty) {

        forcedDiff = difficulty;
        StartRound();
    }

    public void StartRound()
    {
        int difficulty = 0;
        if (forcedDiff > 0)
        {
            difficulty = forcedDiff;
        }
#if UNITY_IOS // && !UNITY_EDITOR
    difficulty = NativeAPI.startNewRound();
#elif UNITY_ANDROID //&& !UNITY_EDITOR
        AndroidJavaObject overrideActivity = GetOverrideObject(); //new AndroidJavaClass("com.company.product.OverrideUnityActivity");
        if (overrideActivity != null)
        {
            print("override is real! - START ROUND");
            difficulty = overrideActivity.Call<int>("startNewRound");
        }
#endif
        print($"[CUBE] - start round -> diff: {difficulty}");
        InterfaceController.Instance.StartRound(WindowForId(), difficulty);
    }



    public void PausePressed()
    {
        //#if UNITY_EDITOR
        //        return;
        //#endif


#if UNITY_IOS

#if !UNITY_EDITOR
        PauseGame();
        NativeAPI.pausePressed();
#else
        EndGame();
        InterfaceController.Instance.Show(GameWindow.DebugScene);
        InterfaceController.Instance.Hide(GameWindow.WPAGame);
#endif
#elif UNITY_ANDROID
        AndroidJavaObject overrideActivity = GetOverrideObject(); //new AndroidJavaClass("com.company.product.OverrideUnityActivity");
        if (overrideActivity != null)
        {
            PauseGame();
            print("override is real! - PAUSE");
            //AndroidJavaObject overrideActivity = jc.GetStatic<AndroidJavaObject>("instance");
            overrideActivity.Call("pausePressed");
        }
        else
        {
            //SHOULD ONLY BE IN STAND ALONE MODE
            EndGame();
            InterfaceController.Instance.Show(GameWindow.DebugScene);
            InterfaceController.Instance.Hide(GameWindow.WPAGame);
        }
#endif
    }

    private void PauseGame()
    {
        InterfaceController.Instance.PauseGame(GameWindow.OverlayUIScene);
        InterfaceController.Instance.PauseGame(WindowForId());
        InterfaceController.Instance.SetButtonsEnabled(false);
    }

    public void ResumeGame()
    {
        InterfaceController.Instance.ResumeGame(GameWindow.OverlayUIScene);
        InterfaceController.Instance.ResumeGame(WindowForId());
        InterfaceController.Instance.SetButtonsEnabled(true);
    }

    public void HelpPressed()
    {
//#if UNITY_EDITOR
//        //StartRound();
//        //TODO: Help??
//        return;
//#endif

#if UNITY_IOS
        NativeAPI.helpPressed();
#elif UNITY_ANDROID
        AndroidJavaObject overrideActivity = GetOverrideObject(); //new AndroidJavaClass("com.company.product.OverrideUnityActivity");
        if (overrideActivity != null)
        {
            print("override is real! - HELP");
            overrideActivity.Call("helpPressed");
        }
#endif
    }

    public void FinishRound(bool success, int score, string analytics)
    {
        print("[CUBE] - finish round");
//#if UNITY_EDITOR
//        StartRoundWithDifficulty(forcedDiff);
//        return;
//#endif

#if UNITY_IOS
        NativeAPI.finishRound(success, score, analytics);
#elif UNITY_ANDROID
        AndroidJavaObject overrideActivity = GetOverrideObject(); //new AndroidJavaClass("com.company.product.OverrideUnityActivity");
        if (overrideActivity != null)
        {
            print("override is real! - Finish round");
            overrideActivity.Call("finishRound", success, score, analytics);
        }
        else
        {
            //SHOULD ONLY BE IN STAND ALONE MODE
            print("Android standalone restart round");
            StartRoundWithDifficulty(forcedDiff);
        }
#endif
    }

    public void EndGame()
    {
        print("[CUBE] - End Game");
        InterfaceController.Instance.EndGame(WindowForId());
    }

#if UNITY_EDITOR

    //private void OnGUI()
    //{
    //    GUIStyle style = new GUIStyle("button");
    //    style.fontSize = 30;
        //if (GUI.Button(new Rect(10, 300, 400, 100), "Show Native", style)) showHostMainWindow();
        //if (GUI.Button(new Rect(610, 300, 200, 100), "Start", style)) StartRound();
        ////if (GUI.Button(new Rect(210, 400, 200, 100), "Finish Round", style)) FinishRound();
        //if (GUI.Button(new Rect(410, 400, 200, 100), "Top bar?", style)) TopBarHeight();
    //}
#endif

    private void OnApplicationFocus(bool focus)
    {
        print($"[CUBE] - OnApplicationFocus: {focus}");
    }

    private void OnApplicationPause(bool pause)
    {
        print($"[CUBE] - OnApplicationPause: {pause}");
    }

    private void OnApplicationQuit()
    {
        print($"[CUBE] - OnApplicationQuit!!");
    }

    private AndroidJavaObject GetOverrideObject()
    {
//#if UNITY_EDITOR
//        return null;
//#endif
        AndroidJavaClass jc = new AndroidJavaClass("com.brainbow.unitygameframework.OverrideUnityActivity");
        if (jc == null)
        {
            return null;
        }
        AndroidJavaObject overrideActivity = jc.GetStatic<AndroidJavaObject>("instance");
        return overrideActivity ?? null;
    }
}

