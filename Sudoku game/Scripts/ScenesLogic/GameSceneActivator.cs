using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Peak.Speedoku.Scripts.Common;
using Peak.Speedoku.Scripts.Autogenerated;
using Peak.Speedoku.Scripts.Game.Gameplay;
using Peak.Speedoku.Scripts.Settings;
using Peak.Speedoku.Scripts.Game;
using System;

namespace Peak.Speedoku.Scripts.ScenesLogic
{
    public class GameSceneActivator : SceneActivationBehaviour<GameSceneActivator>
    {
        [SerializeField]
        public GameObject featureRoot;

        [SerializeField] GameplayScript gameplay;
        //[SerializeField] GridController gridController;
        [SerializeField] KeyboardController keyboardController;

        //public GameplayScript Gameplay => gameplay;

        public event Action GamePaused;

        public override void Initialize()
        {
            base.Initialize();
        }

        public override void Show(bool animated = false)
        {
            base.Show(animated);
        }

        public override void Hide()
        {
            base.Hide();
        }

        //public void SetupAndStartGame(MainGameData gameData)
        //{
        //    SceneActivationBehaviour<GameLogicActivator>.Instance.GameController.StartGameHandler(gameData);
        //}

        ////public override void SetButtonsEnabled(bool isEnabled)
        ////{
        ////base.SetButtonsEnabled(isEnabled);
        ////}

        //public void KeyboardButtonHandler(KeyButtonScript sender)
        //{
        //    print($"[GSA] Keyboard clicked - sender: {sender.KeyNumber}");
        //    gameplay.OnKeyboardPressed(sender);
        //}

        //public void PauseButtonHandler()
        //{
        //    InterfaceController.Instance.Show(GameWindow.PauseMenu, true);
        //    GamePaused?.Invoke();
        //}

        //public void QuitButtonHandler()
        //{
        //    print("Quit clicked");

        //    gameplay.EndGameSession(); //Refactor to after results
        //    InterfaceController.Instance.Show(GameWindow.MainMenu);
        //    InterfaceController.Instance.Hide(GameWindow.GameScene);
        //}
    }
}
