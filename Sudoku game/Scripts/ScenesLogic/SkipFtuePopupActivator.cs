using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Peak.Speedoku.Scripts.Common;
using Peak.Speedoku.Scripts.Autogenerated;
using System;

namespace Peak.Speedoku.Scripts.ScenesLogic
{
    public class SkipFtuePopupActivator : SceneActivationBehaviour<SkipFtuePopupActivator> 
    {
        public override void Initialize()
        {
            base.Initialize();
        }

        public override void Show(bool animated = false)
        {
            base.Show(animated);
        }

        public override void Hide()
        {
            base.Hide();
        }

        //public override void SetButtonsEnabled(bool isEnabled)
        //{
            //base.SetButtonsEnabled(isEnabled);
        //}

        public void ResumeButtonHandler()
        {
            print("RESUME");
            InterfaceController.Instance.Hide(GameWindow.SkipFtuePopup);
            //LocalisationController.Instance.PlayAudioClip(Settings.Autogenerated.SoundSettingsKey.PopupSound);
        }

        public void SkipButtonHandler()
        {
            print("Skip");
            //TODO: quit game and auto start next one
            InterfaceController.Instance.Hide(GameWindow.SkipFtuePopup);
            SceneActivationBehaviour<OverlayUISceneActivator>.Instance.HideFtueMessages();
            SceneActivationBehaviour<OverlayUISceneActivator>.Instance.ShowFtueSkipButton(false);
            SceneActivationBehaviour<OverlayUISceneActivator>.Instance.UnsubscribeFromFullScreenTap();
            SceneActivationBehaviour<GameLogicActivator>.Instance.GameController.SkipFtueHandler();
            SceneActivationBehaviour<PauseMenuActivator>.Instance.QuitButtonHandler();
            StartCoroutine(PlayAfterDelay());
        }

        private IEnumerator PlayAfterDelay()
        {
            yield return new WaitForSeconds(0.5f);
            SceneActivationBehaviour<MainMenuActivator>.Instance.PlayButtonHandler();//TODO does this need a delay??
        }
    }
}
