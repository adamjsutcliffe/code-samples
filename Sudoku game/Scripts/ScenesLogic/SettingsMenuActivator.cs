using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Peak.Speedoku.Scripts.Common;
using Peak.Speedoku.Scripts.Autogenerated;
using System;
using TMPro;

namespace Peak.Speedoku.Scripts.ScenesLogic
{
    public class SettingsMenuActivator : SceneActivationBehaviour<SettingsMenuActivator> 
    {
        [SerializeField] private GameObject SoundButtonCross;
        [SerializeField] private GameObject MusicButtonCross;
        [SerializeField] private TextMeshProUGUI versionText;

        [Header("Contact Email")]
        [SerializeField]private string feedbackUrlScheme;
        [SerializeField]private string feedbackSubject;

        public override void Initialize()
        {
            base.Initialize();
        }

        public override void Show(bool animated = false)
        {
            LocalisationController.Instance.PlayAudioClip(Settings.Autogenerated.SoundSettingsKey.PopupSound);
            versionText.text = $"Version: {Application.version}";
            SoundButtonCross.SetActive(!LocalisationController.Instance.IsSoundEnabled);
            MusicButtonCross.SetActive(!LocalisationController.Instance.IsMusicEnabled);
            base.Show(animated);
        }

        public override void Hide()
        {
            base.Hide();
        }

        //public override void SetButtonsEnabled(bool isEnabled)
        //{
            //base.SetButtonsEnabled(isEnabled);
        //}

        public void TutorialButtonHandler()
        {
            print("Tutorial");
            //TODO reset ftue info then start game
            SceneActivationBehaviour<GameLogicActivator>.Instance.GameController.ResetFtueHandler();
            InterfaceController.Instance.Hide(GameWindow.SettingsMenu);
            SceneActivationBehaviour<MainMenuActivator>.Instance.PlayButtonHandler();
        }

        public void HowToPlayButtonHandler()
        {
            LocalisationController.Instance.PlayAudioClip(Settings.Autogenerated.SoundSettingsKey.PopupSound);
            InterfaceController.Instance.Show(GameWindow.TutorialPopup, true);
        }

        public void PrivacyButtonHandler()
        {
            Application.OpenURL("https://privacy.brainbowgames.com/");
        }

        public void ContactButtonHandler()
        {
            string url = string.Format(feedbackUrlScheme,
                WWW.EscapeURL(feedbackSubject).Replace("+", "%20"),
                WWW.EscapeURL("\n\n" + Constants.MainGame.ContactUsEmailTemplate + "\nVersion number: " + Application.version).Replace("+", "%20"));

            Application.OpenURL(url);
        }

        public void SoundButtonPressed()
        {
            LocalisationController.Instance.ToggleSfx(true);
            SoundButtonCross.SetActive(!LocalisationController.Instance.IsSoundEnabled);
        }

        public void MusicButtonPressed()
        {
            LocalisationController.Instance.ToggleMusic(true);
            MusicButtonCross.SetActive(!LocalisationController.Instance.IsMusicEnabled);
        }

        public void CloseButtonHandler()
        {
            InterfaceController.Instance.Hide(GameWindow.SettingsMenu);
            LocalisationController.Instance.PlayAudioClip(Settings.Autogenerated.SoundSettingsKey.PopupSound);
        }
    }
}
